PUT
/api/2.0/accounts/{account_id}/private-access-settings/{private_access_settings_id}
Updates an existing private access settings object, which specifies how your workspace is
accessed over
AWS PrivateLink
. To use AWS
PrivateLink, a workspace must have a private access settings object referenced by ID in
the workspace's
code: private_access_settings_id
property.
This operation completely
overwrites your existing private access settings object attached to your workspaces.
All workspaces attached to the private access settings are affected by any change.
If
code: public_access_enabled
,
code: private_access_level
, or
code: allowed_vpc_endpoint_ids
are updated, effects of these changes might take several minutes to propagate to the
workspace API.
You can share one private access settings object with multiple
workspaces in a single account. However, private access settings are specific to
AWS regions, so only workspaces in the same AWS region can use a given private access
settings object.
Before configuring PrivateLink, read the
Databricks article about PrivateLink
.
Path parameters
code: account_id
required
uuid
Databricks account ID of any type. For non-E2 account types, get your account ID from the
Accounts Console
.
code: private_access_settings_id
required
uuid
Databricks Account API private access settings ID.
Request body
Properties of the new private access settings object.
code: private_access_settings_name
required
string
[ 4 .. 256 ] characters
The human-readable name of the private access settings object.
code: region
required
string
The AWS region for workspaces attached to this private access settings object. This must be a
region that Databricks supports for PrivateLink
.
code: public_access_enabled
boolean
Default
code: false
Determines if the workspace can be accessed over public internet. For fully private workspaces, you can optionally specify
code: false
, but only if you implement both the front-end and the back-end PrivateLink connections. Otherwise, specify
code: true
, which means that public access is enabled.
code: private_access_level
string
Enum:
code: ACCOUNT | ENDPOINT
Example
code: "ENDPOINT"
The private access level controls which VPC endpoints can connect to the UI or API of any workspace that attaches this private access settings object.
code: ACCOUNT
level access (the default) allows only VPC endpoints that are registered in your Databricks account connect to your workspace.
code: ENDPOINT
level access allows only specified VPC endpoints connect to your workspace. For details, see
code: allowed_vpc_endpoint_ids
.
code: allowed_vpc_endpoint_ids
Array of uuid
An array of Databricks VPC endpoint IDs. This is the Databricks ID that is returned when registering the VPC endpoint configuration in your Databricks account. This is not the ID of the VPC endpoint in AWS.
Only used when
code: private_access_level
is set to
code: ENDPOINT
. This is an allow list of VPC endpoints that in your account that can connect to your workspace over AWS PrivateLink.
If hybrid access to your workspace is enabled by setting
code: public_access_enabled
to
code: true
, this control only works for PrivateLink connections. To control how your workspace is accessed via public internet, see
IP access lists
.
Responses
200
The private access settings object was successfully updated.
The private access settings object was successfully updated.
This method might return the following HTTP codes: 400, 401, 404, 500
Error responses are returned in the following format:
{
"error_code"
:
"Error code"
,
"message"
:
"Human-readable error message."
}
Possible error codes:
HTTP code
error_code
Description
400
BAD_REQUEST
Request is invalid.
401
UNAUTHORIZED
The request does not have valid authentication credentials for the operation.
404
NOT_FOUND
Operation was performed on a resource that does not exist.
500
INTERNAL_SERVER_ERROR
Internal error.