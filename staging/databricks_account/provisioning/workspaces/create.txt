POST
/api/2.0/accounts/{account_id}/workspaces
Creates a new workspace using a credential configuration and a storage configuration,
an optional network configuration (if using a customer-managed VPC), an optional managed
services key configuration (if using customer-managed keys for managed services),
and an optional storage key configuration (if using customer-managed keys for storage).
The key configurations used for managed services and storage encryption can be the same
or different.
Important
: This operation is asynchronous. A response with HTTP status code 200 means
the request has been accepted and is in progress, but does not mean that the workspace
deployed successfully and is running. The initial workspace status is typically
code: PROVISIONING
. Use the workspace ID (
code: workspace_id
) field in the response to identify
the new workspace and make repeated
code: GET
requests with the workspace ID and check
its status. The workspace becomes available when the status changes to
code: RUNNING
.
You can share one customer-managed VPC with multiple workspaces in a single account.
It is not required to create a new VPC for each workspace. However, you
cannot
reuse
subnets or Security Groups between workspaces. If you plan to share one VPC with multiple
workspaces, make sure you size your VPC and subnets accordingly. Because a Databricks
Account API network configuration encapsulates this information, you cannot reuse
a Databricks Account API network configuration across workspaces.\nFor information about
how to create a new workspace with this API
including error handling
,
see
Create a new workspace using the Account API
.
Important
: Customer-managed VPCs, PrivateLink, and customer-managed keys are supported
on a limited set of deployment and subscription types. If you have questions about
availability, contact your Databricks representative.\n\nThis operation is available only
if your account is on the E2 version of the platform or on a select custom plan that
allows multiple workspaces per account.
Path parameters
code: account_id
required
uuid
Databricks account ID of any type. For non-E2 account types, get your account ID from the
Accounts Console
.
Request body
Properties of the new workspace.
code: workspace_name
required
string
The workspace's human-readable name.
code: network_id
uuid
Example
code: "fd0cc5bc-683c-47e9-b15e-144d7744a496"
The ID of the workspace's network configuration object. To use
AWS PrivateLink
, this field is required.
code: deployment_name
string
^(([a-z0-9][a-z0-9-]*[a-z0-9])|([a-z0-9]))|(EMPTY)$
Example
code: "workspace_1"
The deployment name defines part of the subdomain for the workspace. The workspace URL for the web application and REST APIs is
code: <workspace-deployment-name>.cloud.databricks.com
. For example, if the deployment name is
code: abcsales
, your workspace URL will be
code: https://abcsales.cloud.databricks.com
. Hyphens are allowed. This property supports only the set of characters that are allowed in a subdomain.
To set this value, you must have a deployment name prefix. Contact your Databricks account team to add an account deployment name prefix to your account.
Workspace deployment names follow the account prefix and a hyphen. For example, if your account's deployment prefix is
code: acme
and the workspace deployment name is
code: workspace-1
, the JSON response for the
code: deployment_name
field becomes
code: acme-workspace-1
. The workspace URL would be
code: acme-workspace-1.cloud.databricks.com
.
You can also set the
code: deployment_name
to the reserved keyword
code: EMPTY
if you want the deployment name to only include the deployment prefix. For example, if your account's deployment prefix is
code: acme
and the workspace deployment name is
code: EMPTY
, the
code: deployment_name
becomes
code: acme
only and the workspace URL is
code: acme.cloud.databricks.com
.
This value must be unique across all non-deleted deployments across all AWS regions.
If a new workspace omits this property, the server generates a unique deployment name for you with the pattern
code: dbc-xxxxxxxx-xxxx
.
code: aws_region
string
Example
code: "us-west-2"
The AWS region of the workspace's data plane.
code: credentials_id
uuid
Example
code: "ccc64f28-ebdc-4c89-add9-5dcb6d7727d8"
ID of the workspace's credential configuration object.
code: storage_configuration_id
uuid
Example
code: "b43a6064-04c1-4e1c-88b6-d91e5b136b13"
The ID of the workspace's storage configuration object.
code: managed_services_customer_managed_key_id
uuid
Example
code: "849b3d6b-e68e-468d-b3e5-deb08b03c56d"
The ID of the workspace's managed services encryption key configuration object. This is used to help protect and control access to the workspace's notebooks, secrets, Databricks SQL queries, and query history. The provided key configuration object property
code: use_cases
must contain
code: MANAGED_SERVICES
.
code: private_access_settings_id
uuid
ID of the workspace's private access settings object. Only used for PrivateLink. This ID must be specified for customers using
AWS PrivateLink
for either front-end (user-to-workspace connection), back-end (data plane to control plane connection), or both connection types.
Before configuring PrivateLink, read the
Databricks article about PrivateLink
.",
code: pricing_tier
string
Enum:
code: UNKNOWN | COMMUNITY_EDITION | STANDARD | PREMIUM | ENTERPRISE | DEDICATED
Example
code: "PREMIUM"
The pricing tier of the workspace.
For pricing tier information, see
AWS Pricing
.
code: storage_customer_managed_key_id
uuid
The ID of the workspace's storage encryption key configuration object. This is used to encrypt the workspace's root S3 bucket (root DBFS and system data) and, optionally, cluster EBS volumes. The provided key configuration object property
code: use_cases
must contain
code: STORAGE
.
code: custom_tags
object
The custom tags key-value pairing that is attached to this workspace.
The key-value pair is a string of utf-8 characters.
The value can be an empty string, with maximum length of 255 characters.
The key can be of maximum length of 127 characters, and cannot be empty.
Responses
201
Workspace creation request was received. Check workspace status.
Workspace creation request was received. Check workspace status.
code: workspace_id
int64
Example
code: 1614665312930232
A unique integer ID for the workspace
code: workspace_name
string
[ 1 .. 100 ] characters
The human-readable name of the workspace.
code: deployment_name
string
<= 64 characters
The deployment name defines part of the subdomain for the workspace. The workspace URL for web application and REST APIs is
code: <deployment-name>.cloud.databricks.com
.
This value must be unique across all non-deleted deployments across all AWS regions.
code: network_id
uuid
The network configuration ID that is attached to the workspace. This field is available only if the network is a customer-managed network.
code: aws_region
string
The AWS region of the workspace data plane (for example,
code: us-west-2
).
code: credentials_id
uuid
ID of the workspace's credential configuration object.
code: storage_configuration_id
uuid
ID of the workspace's storage configuration object.
code: account_id
uuid
Databricks account ID.
code: workspace_status
string
Enum:
code: NOT_PROVISIONED | PROVISIONING | RUNNING | FAILED | BANNED | CANCELLING
Example
code: "RUNNING"
The status of the workspace.
For workspace creation, usually it is set to
code: PROVISIONING
initially.
Continue to check the status until the status is
code: RUNNING
.
code: workspace_status_message
string
Example
code: "Workspace resources are being set up."
Message describing the current workspace status.
code: managed_services_customer_managed_key_id
uuid
ID of the key configuration for encrypting managed services.
code: private_access_settings_id
uuid
ID of the workspace's private access settings object. Only used for PrivateLink. You must specify this ID if you are using
AWS PrivateLink
for either front-end (user-to-workspace connection), back-end (data plane to control plane connection), or both connection types.
Before configuring PrivateLink, read the
Databricks article about PrivateLink
.",
code: creation_time
int64
Time in epoch milliseconds when the workspace was created.
code: pricing_tier
string
Enum:
code: UNKNOWN | COMMUNITY_EDITION | STANDARD | PREMIUM | ENTERPRISE | DEDICATED
Example
code: "PREMIUM"
The pricing tier of the workspace.
For pricing tier information, see
AWS Pricing
.
code: storage_customer_managed_key_id
uuid
ID of the key configuration for encrypting workspace storage.
code: custom_tags
object
The custom tags key-value pairing that is attached to this workspace.
The key-value pair is a string of utf-8 characters.
The value can be an empty string, with maximum length of 255 characters.
The key can be of maximum length of 127 characters, and cannot be empty.
This method might return the following HTTP codes: 400, 401, 403, 404, 500
Error responses are returned in the following format:
{
"error_code"
:
"Error code"
,
"message"
:
"Human-readable error message."
}
Possible error codes:
HTTP code
error_code
Description
400
BAD_REQUEST
Request is invalid.
401
UNAUTHORIZED
The request does not have valid authentication credentials for the operation.
403
PERMISSION_DENIED
Caller does not have permission to execute the specified operation.
404
NOT_FOUND
Operation was performed on a resource that does not exist.
500
INTERNAL_SERVER_ERROR
Internal error.