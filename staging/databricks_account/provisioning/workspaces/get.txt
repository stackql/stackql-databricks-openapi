GET
/api/2.0/accounts/{account_id}/workspaces/{workspace_id}
Gets information including status for a Databricks workspace, specified by ID. In the response, the
code: workspace_status
field indicates the current status. After initial workspace creation (which is asynchronous), make repeated
code: GET
requests with the workspace ID and check its status. The workspace becomes available when the status changes to
code: RUNNING
.
For information about how to create a new workspace with this API
including error handling
, see
Create a new workspace using the Account API
.
This operation is available only if your account is on the E2 version of the platform or on a select custom plan that allows multiple workspaces per account.
Path parameters
code: account_id
required
uuid
Databricks account ID of any type. For non-E2 account types, get your account ID from the
Accounts Console
.
code: workspace_id
required
int64
Workspace ID.
Responses
200
The workspace configuration was successfully returned.
The workspace configuration was successfully returned.
code: workspace_id
int64
Example
code: 1614665312930232
A unique integer ID for the workspace
code: workspace_name
string
[ 1 .. 100 ] characters
The human-readable name of the workspace.
code: deployment_name
string
<= 64 characters
The deployment name defines part of the subdomain for the workspace. The workspace URL for web application and REST APIs is
code: <deployment-name>.cloud.databricks.com
.
This value must be unique across all non-deleted deployments across all AWS regions.
code: network_id
uuid
The network configuration ID that is attached to the workspace. This field is available only if the network is a customer-managed network.
code: aws_region
string
The AWS region of the workspace data plane (for example,
code: us-west-2
).
code: credentials_id
uuid
ID of the workspace's credential configuration object.
code: storage_configuration_id
uuid
ID of the workspace's storage configuration object.
code: account_id
uuid
Databricks account ID.
code: workspace_status
string
Enum:
code: NOT_PROVISIONED | PROVISIONING | RUNNING | FAILED | BANNED | CANCELLING
Example
code: "RUNNING"
The status of the workspace.
For workspace creation, usually it is set to
code: PROVISIONING
initially.
Continue to check the status until the status is
code: RUNNING
.
code: workspace_status_message
string
Example
code: "Workspace resources are being set up."
Message describing the current workspace status.
code: managed_services_customer_managed_key_id
uuid
ID of the key configuration for encrypting managed services.
code: private_access_settings_id
uuid
ID of the workspace's private access settings object. Only used for PrivateLink. You must specify this ID if you are using
AWS PrivateLink
for either front-end (user-to-workspace connection), back-end (data plane to control plane connection), or both connection types.
Before configuring PrivateLink, read the
Databricks article about PrivateLink
.",
code: creation_time
int64
Time in epoch milliseconds when the workspace was created.
code: pricing_tier
string
Enum:
code: UNKNOWN | COMMUNITY_EDITION | STANDARD | PREMIUM | ENTERPRISE | DEDICATED
Example
code: "PREMIUM"
The pricing tier of the workspace.
For pricing tier information, see
AWS Pricing
.
code: storage_customer_managed_key_id
uuid
ID of the key configuration for encrypting workspace storage.
code: custom_tags
object
The custom tags key-value pairing that is attached to this workspace.
The key-value pair is a string of utf-8 characters.
The value can be an empty string, with maximum length of 255 characters.
The key can be of maximum length of 127 characters, and cannot be empty.
This method might return the following HTTP codes: 401, 404, 500
Error responses are returned in the following format:
{
"error_code"
:
"Error code"
,
"message"
:
"Human-readable error message."
}
Possible error codes:
HTTP code
error_code
Description
401
UNAUTHORIZED
The request does not have valid authentication credentials for the operation.
404
NOT_FOUND
Operation was performed on a resource that does not exist.
500
INTERNAL_SERVER_ERROR
Internal error.