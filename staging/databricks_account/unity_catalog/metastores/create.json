{
  "verb": "post",
  "path": "/api/2.0/accounts/{account_id}/metastores",
  "description": "Creates a Unity Catalog metastore.",
  "parameters": {
    "account_id": {
      "in": "path",
      "required": true,
      "type": "uuid",
      "description": "."
    }
  },
  "requestBody": {
    "properties": {
      "metastore_info": {
        "description": "object"
      },
      "name": {
        "type": "string",
        "description": "The user-specified name of the metastore."
      },
      "storage_root": {
        "type": "string",
        "description": "The storage root URL for metastore"
      },
      "region": {
        "type": "string",
        "description": "Cloud region which the metastore serves (e.g.,"
      },
      "us-west-2": {
        "description": ","
      },
      "westus": {
        "description": ". If this field is omitted, the region of the workspace receiving the request will be used."
      }
    }
  },
  "responses": {
    "201": {
      "metastore_info": {
        "description": "object"
      },
      "name": {
        "type": "string",
        "description": "The user-specified name of the metastore."
      },
      "storage_root": {
        "type": "string",
        "description": "The storage root URL for metastore"
      },
      "default_data_access_config_id": {
        "type": "string",
        "description": "Unique identifier of the metastore's (Default) Data Access Configuration."
      },
      "storage_root_credential_id": {
        "type": "string",
        "description": "UUID of storage credential to access the metastore storage_root."
      },
      "delta_sharing_scope": {
        "type": "string",
        "description": "Enum:"
      },
      "INTERNAL | INTERNAL_AND_EXTERNAL": {
        "description": "The scope of Delta Sharing enabled for the metastore."
      },
      "delta_sharing_recipient_token_lifetime_in_seconds": {
        "description": "The lifetime of delta sharing recipient token in seconds."
      },
      "delta_sharing_organization_name": {
        "type": "string",
        "description": "The organization name of a Delta Sharing entity, to be used in Databricks-to-Databricks Delta Sharing as the official name."
      },
      "owner": {
        "type": "string",
        "description": "The owner of the metastore."
      },
      "privilege_model_version": {
        "type": "string",
        "description": "Privilege model version of the metastore, of the form"
      },
      "major.minor": {
        "description": "(e.g.,"
      },
      "1.0": {
        "description": ")."
      },
      "region": {
        "type": "string",
        "description": "Cloud region which the metastore serves (e.g.,"
      },
      "us-west-2": {
        "description": ","
      },
      "westus": {
        "description": ")."
      },
      "metastore_id": {
        "type": "string",
        "description": "Unique identifier of metastore."
      },
      "created_at": {
        "description": "Time at which this metastore was created, in epoch milliseconds."
      },
      "created_by": {
        "type": "string",
        "description": "Username of metastore creator."
      },
      "updated_at": {
        "description": "Time at which the metastore was last modified, in epoch milliseconds."
      },
      "updated_by": {
        "type": "string",
        "description": "Username of user who last modified the metastore."
      },
      "storage_root_credential_name": {
        "type": "string",
        "description": "Name of the storage credential to access the metastore storage_root."
      },
      "cloud": {
        "type": "string",
        "description": "Cloud vendor of the metastore home shard (e.g.,"
      },
      "aws": {
        "description": ","
      },
      "azure": {
        "description": ","
      },
      "gcp": {
        "description": ")."
      },
      "global_metastore_id": {
        "type": "string",
        "description": "Globally unique metastore ID across clouds and regions, of the form"
      },
      "cloud:region:metastore_id": {
        "description": "."
      },
      "external_access_enabled": {
        "type": "boolean",
        "description": "Whether to allow non-DBR clients to directly access entities under the metastore."
      }
    },
    "400": {
      "error_code": "BAD_REQUEST",
      "description": "Request is invalid."
    },
    "401": {
      "error_code": "UNAUTHORIZED",
      "description": "The request does not have valid authentication credentials for the operation."
    },
    "500": {
      "error_code": "INTERNAL_SERVER_ERROR",
      "description": "Internal error."
    }
  }
}