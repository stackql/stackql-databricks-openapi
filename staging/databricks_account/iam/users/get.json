{
 "/api/2.0/accounts/{account_id}/scim/v2/Users/{id}": {
  "get": {
   "operationId": "users-get",
   "externalDocs": {
    "url": "https://docs.databricks.com/api/account/accountusers/get"
   },
   "x-stackQL-resource": "users",
   "x-stackQL-method": "get",
   "x-stackQL-verb": "select",
   "x-numReqParams": 2,
   "parameters": [
    {
     "name": "account_id",
     "required": true,
     "description": "(uuid) Databricks account ID",
     "in": "path"
    },
    {
     "name": "id",
     "required": true,
     "description": "(int64) Unique ID for a user in the Databricks account.",
     "in": "path"
    },
    {
     "name": "filter",
     "description": "Query by which the results have to be filtered. Supported operators are equals(",
     "in": "query"
    },
    {
     "name": "attributes",
     "description": "Comma-separated list of attributes to return in response.",
     "in": "query"
    },
    {
     "name": "excludedAttributes",
     "description": "Comma-separated list of attributes to exclude in response.",
     "in": "query"
    },
    {
     "name": "startIndex",
     "description": "Specifies the index of the first result. First item is number 1.",
     "in": "query"
    },
    {
     "name": "count",
     "description": "Desired number of results per page. Default is 10000.",
     "in": "query"
    },
    {
     "name": "sortBy",
     "description": "Attribute to sort the results. Multi-part paths are supported. For example,",
     "in": "query"
    },
    {
     "name": "sortOrder",
     "description": "The order to sort the results.",
     "in": "query"
    }
   ],
   "responses": {
    "200": {
     "description": "User information was returned successfully.",
     "content": {
      "application/json": {
       "schema": {
        "type": "object",
        "properties": {
         "id": {
          "type": "string"
         },
         "userName": {
          "type": "string"
         },
         "emails": {
          "type": "array",
          "items": {
           "type": "object",
           "properties": {
            "$ref": {
             "type": "string"
            },
            "value": {
             "type": "string"
            },
            "display": {
             "type": "string"
            },
            "primary": {
             "type": "boolean"
            },
            "type": {
             "type": "string"
            }
           }
          }
         },
         "name": {
          "type": "object",
          "properties": {
           "givenName": {
            "type": "string"
           },
           "familyName": {
            "type": "string"
           }
          }
         },
         "displayName": {
          "type": "string"
         },
         "roles": {
          "type": "array",
          "items": {
           "type": "object",
           "properties": {
            "$ref": {
             "type": "string"
            },
            "value": {
             "type": "string"
            },
            "display": {
             "type": "string"
            },
            "primary": {
             "type": "boolean"
            },
            "type": {
             "type": "string"
            }
           }
          }
         },
         "externalId": {
          "type": "string"
         },
         "active": {
          "type": "boolean"
         }
        }
       }
      }
     }
    },
    "401": {
     "description": "The request does not have valid authentication credentials for the operation."
    },
    "403": {
     "description": "Caller does not have permission to execute the specified operation."
    },
    "404": {
     "description": "Operation was performed on a resource that does not exist."
    },
    "500": {
     "description": "Internal error."
    }
   },
   "description": "Gets information for a specific user in Databricks account."
  }
 }
}