{
 "/api/2.0/preview/scim/v2/Users": {
  "post": {
   "operationId": "users-create",
   "externalDocs": {
    "url": "https://docs.databricks.com/api/workspace/users/create"
   },
   "x-stackQL-resource": "users",
   "x-stackQL-method": "create",
   "x-stackQL-verb": "insert",
   "x-numReqParams": 0,
   "parameters": [],
   "requestBody": {
    "required": true,
    "content": {
     "application/json": {
      "schema": {
       "type": "object",
       "properties": {
        "schemas": {
         "type": "Array of string",
         "description": "The schema of the user."
        },
        "id": {
         "type": "integer",
         "format": "int64",
         "description": "Databricks user ID. This is automatically set by Databricks. Any value provided by the client will be ignored."
        },
        "userName": {
         "type": "email",
         "description": "Email address of the Databricks user."
        },
        "displayName": {
         "type": "string",
         "description": "String that represents a concatenation of given and family names. For example "
        },
        "externalId": {
         "type": "string",
         "description": ". This field cannot be updated through the Workspace SCIM APIs when "
        },
        "active": {
         "type": "boolean",
         "description": ". Use Account SCIM APIs to update "
        },
        "emails": {
         "type": "Array of object"
        },
        "name": {
         "type": "object"
        },
        "groups": {
         "type": "Array of object"
        },
        "roles": {
         "type": "Array of object"
        },
        "entitlements": {
         "type": "Array of object"
        }
       },
       "example": {
        "schemas": [
         "urn:ietf:params:scim:schemas:core:2.0:User"
        ],
        "id": "string",
        "userName": "user@example.com",
        "emails": [
         {
          "$ref": "string",
          "value": "string",
          "display": "string",
          "primary": true,
          "type": "string"
         }
        ],
        "name": {
         "givenName": "string",
         "familyName": "string"
        },
        "displayName": "string",
        "groups": [
         {
          "$ref": "string",
          "value": "string",
          "display": "string",
          "primary": true,
          "type": "string"
         }
        ],
        "roles": [
         {
          "$ref": "string",
          "value": "string",
          "display": "string",
          "primary": true,
          "type": "string"
         }
        ],
        "entitlements": [
         {
          "$ref": "string",
          "value": "string",
          "display": "string",
          "primary": true,
          "type": "string"
         }
        ],
        "externalId": "string",
        "active": true
       }
      }
     }
    },
    "description": "Properties of the new user."
   },
   "responses": {
    "201": {
     "description": "The user creation request succeeded."
    },
    "400": {
     "description": "Request is invalid or malformed."
    },
    "401": {
     "description": "The request does not have valid authentication credentials for the operation."
    },
    "403": {
     "description": "Caller does not have permission to execute the specified operation."
    },
    "409": {
     "description": "Request was rejected due a conflict with an existing resource."
    },
    "500": {
     "description": "Internal error."
    }
   },
   "description": "Creates a new user in the Databricks workspace. This new user will also be added to the Databricks account."
  }
 }
}