{
 "/api/2.1/unity-catalog/tables/{table_name}/monitor": {
  "post": {
   "operationId": "quality-monitors-create",
   "externalDocs": {
    "url": "https://docs.databricks.com/api/workspace/qualitymonitors/create"
   },
   "x-stackQL-resource": "quality_monitors",
   "x-stackQL-method": "create",
   "x-stackQL-verb": "insert",
   "x-numReqParams": 1,
   "parameters": [
    {
     "name": "table_name",
     "required": true,
     "description": "(string) Full name of the table.",
     "in": "path"
    }
   ],
   "requestBody": {
    "required": true,
    "content": {
     "application/json": {
      "schema": {
       "type": "object",
       "properties": {
        "skip_builtin_dashboard": {
         "type": "boolean",
         "description": "Whether to skip creating a default dashboard summarizing data quality metrics."
        },
        "warehouse_id": {
         "type": "string",
         "description": "Optional argument to specify the warehouse for dashboard creation. If not specified, the first running\nwarehouse will be used."
        },
        "assets_dir": {
         "type": "required",
         "description": "The directory to store monitoring assets (e.g. dashboard, metric tables)."
        },
        "output_schema_name": {
         "type": "string",
         "description": "Schema where output metric tables are created."
        },
        "snapshot": {
         "type": "required",
         "description": "Configuration for monitoring snapshot tables."
        },
        "slicing_exprs": {
         "type": "string",
         "description": "List of column expressions to slice data with for targeted analysis. The data is grouped by\neach expression independently, resulting in a separate slice for each predicate and its\ncomplements. For high-cardinality columns, only the top 100 unique values by frequency will\ngenerate slices."
        },
        "baseline_table_name": {
         "type": "object",
         "description": "Name of the baseline table from which drift metrics are computed from.\nColumns in the monitored table should also be present in the baseline table."
        },
        "inference_log": {
         "type": "object"
        },
        "time_series": {
         "type": "object"
        },
        "custom_metrics": {
         "type": "Array of object"
        },
        "schedule": {
         "type": "object"
        },
        "notifications": {
         "type": "object"
        }
       },
       "example": {
        "skip_builtin_dashboard": true,
        "warehouse_id": "string",
        "assets_dir": "string",
        "output_schema_name": "string",
        "inference_log": {
         "problem_type": "PROBLEM_TYPE_CLASSIFICATION",
         "timestamp_col": "string",
         "granularities": [
          "string"
         ],
         "prediction_col": "string",
         "label_col": "string",
         "model_id_col": "string",
         "prediction_proba_col": "string"
        },
        "time_series": {
         "timestamp_col": "string",
         "granularities": [
          "string"
         ]
        },
        "snapshot": {},
        "slicing_exprs": [
         "string"
        ],
        "custom_metrics": [
         {
          "name": "string",
          "definition": "string",
          "input_columns": [
           "string"
          ],
          "output_data_type": "string",
          "type": "CUSTOM_METRIC_TYPE_AGGREGATE"
         }
        ],
        "baseline_table_name": "string",
        "schedule": {
         "quartz_cron_expression": "string",
         "timezone_id": "string",
         "pause_status": "UNPAUSED"
        },
        "notifications": {
         "on_failure": {
          "email_addresses": [
           "string"
          ]
         }
        }
       }
      }
     }
    }
   },
   "responses": {
    "200": {
     "description": "The new monitor was successfully created."
    }
   },
   "description": "Creates a new monitor for the specified table."
  }
 }
}