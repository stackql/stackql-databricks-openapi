{
 "/api/2.1/unity-catalog/tables": {
  "get": {
   "operationId": "tables-list",
   "externalDocs": {
    "url": "https://docs.databricks.com/api/workspace/tables/list"
   },
   "x-stackQL-resource": "tables",
   "x-stackQL-method": "list",
   "x-stackQL-verb": "select",
   "x-numReqParams": 2,
   "parameters": [
    {
     "name": "catalog_name",
     "required": true,
     "description": "(string) Name of parent catalog for tables of interest.",
     "in": "query"
    },
    {
     "name": "schema_name",
     "required": true,
     "description": "(string) Parent schema of tables.",
     "in": "query"
    },
    {
     "name": "max_results",
     "description": "Maximum number of tables to return. If not set, all the tables are returned (not recommended).",
     "in": "query"
    },
    {
     "name": "page_token",
     "description": "Opaque token to send for the next page of results (pagination).",
     "in": "query"
    },
    {
     "name": "include_delta_metadata",
     "description": "Whether delta metadata should be included in the response.",
     "in": "query"
    },
    {
     "name": "omit_columns",
     "description": "Whether to omit the columns of the table from the response or not.",
     "in": "query"
    },
    {
     "name": "omit_properties",
     "description": "Whether to omit the properties of the table from the response or not.",
     "in": "query"
    },
    {
     "name": "omit_username",
     "description": "Whether to omit the username of the table (e.g. owner, updated_by, created_by) from the response or not.",
     "in": "query"
    },
    {
     "name": "include_browse",
     "description": "Whether to include tables in the response for which the principal can only access selective metadata for",
     "in": "query"
    },
    {
     "name": "include_manifest_capabilities",
     "description": "Whether to include a manifest containing capabilities the table has.",
     "in": "query"
    }
   ],
   "responses": {
    "200": {
     "description": "The tables list was successfully retrieved.",
     "content": {
      "application/json": {
       "schema": {
        "type": "object",
        "properties": {
         "tables": {
          "type": "array",
          "items": {
           "type": "object",
           "properties": {
            "name": {
             "type": "string"
            },
            "catalog_name": {
             "type": "string"
            },
            "schema_name": {
             "type": "string"
            },
            "table_type": {
             "type": "string"
            },
            "data_source_format": {
             "type": "string"
            },
            "columns": {
             "type": "array",
             "items": {
              "type": "object",
              "properties": {
               "name": {
                "type": "string"
               },
               "type_text": {
                "type": "string"
               },
               "type_name": {
                "type": "string"
               },
               "position": {
                "type": "integer"
               },
               "type_precision": {
                "type": "integer"
               },
               "type_scale": {
                "type": "integer"
               },
               "type_interval_type": {
                "type": "string"
               },
               "type_json": {
                "type": "string"
               },
               "comment": {
                "type": "string"
               },
               "nullable": {
                "type": "boolean"
               },
               "partition_index": {
                "type": "integer"
               },
               "mask": {
                "type": "object",
                "properties": {
                 "function_name": {
                  "type": "string"
                 },
                 "using_column_names": {
                  "type": "array",
                  "items": {
                   "type": "string"
                  }
                 }
                }
               }
              }
             }
            },
            "storage_location": {
             "type": "string"
            },
            "view_definition": {
             "type": "string"
            },
            "view_dependencies": {
             "type": "object",
             "properties": {
              "dependencies": {
               "type": "array",
               "items": {
                "type": "object",
                "properties": {
                 "table": {
                  "type": "object",
                  "properties": {
                   "table_full_name": {
                    "type": "string"
                   }
                  }
                 },
                 "function": {
                  "type": "object",
                  "properties": {
                   "function_full_name": {
                    "type": "string"
                   }
                  }
                 }
                }
               }
              }
             }
            },
            "sql_path": {
             "type": "string"
            },
            "owner": {
             "type": "string"
            },
            "comment": {
             "type": "string"
            },
            "properties": {
             "type": "object",
             "properties": {
              "property1": {
               "type": "string"
              },
              "property2": {
               "type": "string"
              }
             }
            },
            "storage_credential_name": {
             "type": "string"
            },
            "table_constraints": {
             "type": "array",
             "items": {
              "type": "object",
              "properties": {
               "primary_key_constraint": {
                "type": "object",
                "properties": {
                 "name": {
                  "type": "string"
                 },
                 "child_columns": {
                  "type": "array",
                  "items": {
                   "type": "string"
                  }
                 }
                }
               },
               "foreign_key_constraint": {
                "type": "object",
                "properties": {
                 "name": {
                  "type": "string"
                 },
                 "child_columns": {
                  "type": "array",
                  "items": {
                   "type": "string"
                  }
                 },
                 "parent_table": {
                  "type": "string"
                 },
                 "parent_columns": {
                  "type": "array",
                  "items": {
                   "type": "string"
                  }
                 }
                }
               },
               "named_table_constraint": {
                "type": "object",
                "properties": {
                 "name": {
                  "type": "string"
                 }
                }
               }
              }
             }
            },
            "row_filter": {
             "type": "object",
             "properties": {
              "function_name": {
               "type": "string"
              },
              "input_column_names": {
               "type": "array",
               "items": {
                "type": "string"
               }
              }
             }
            },
            "enable_predictive_optimization": {
             "type": "string"
            },
            "metastore_id": {
             "type": "string"
            },
            "full_name": {
             "type": "string"
            },
            "data_access_configuration_id": {
             "type": "string"
            },
            "created_at": {
             "type": "integer"
            },
            "created_by": {
             "type": "string"
            },
            "updated_at": {
             "type": "integer"
            },
            "updated_by": {
             "type": "string"
            },
            "deleted_at": {
             "type": "integer"
            },
            "table_id": {
             "type": "string"
            },
            "delta_runtime_properties_kvpairs": {
             "type": "object",
             "properties": {
              "delta_runtime_properties": {
               "type": "object",
               "properties": {
                "property1": {
                 "type": "string"
                },
                "property2": {
                 "type": "string"
                }
               }
              }
             }
            },
            "effective_predictive_optimization_flag": {
             "type": "object",
             "properties": {
              "value": {
               "type": "string"
              },
              "inherited_from_type": {
               "type": "string"
              },
              "inherited_from_name": {
               "type": "string"
              }
             }
            },
            "access_point": {
             "type": "string"
            },
            "pipeline_id": {
             "type": "string"
            },
            "browse_only": {
             "type": "boolean"
            }
           }
          }
         },
         "next_page_token": {
          "type": "string"
         }
        }
       }
      }
     }
    }
   },
   "x-stackQL-objectKey": "$.tables",
   "description": "Gets an array of all tables for the current metastore under the parent catalog and schema. The caller must be a metastore admin or an owner of (or have the"
  }
 }
}