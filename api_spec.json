{
  "verb": "put",
  "path": "/api/2.0/permissions/clusters/{cluster_id}",
  "description": "Sets permissions on an object, replacing existing permissions if they exist. Deletes all direct permissions if none are specified. Objects can inherit permissions from their root object.",
  "pathParameters": {
    "cluster_id": {
      "required": true,
      "type": "string",
      "description": "The cluster for which to get or manage permissions."
    }
  },
  "requestBody": {
    "properties": {
      "access_control_list": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "name of the user"
            },
            "group_name": {
              "type": "string",
              "description": "name of the group"
            },
            "service_principal_name": {
              "type": "string",
              "description": "application ID of a service principal"
            },
            "permission_level": {
              "type": "string",
              "enum": [
                "CAN_MANAGE",
                "CAN_RESTART",
                "CAN_ATTACH_TO"
              ],
              "description": "Permission level"
            }
          }
        }
      }
    }
  },
  "responses": {
    "200": {
      "object_id": {
        "type": "string"
      },
      "object_type": {
        "type": "string"
      },
      "access_control_list": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "user_name": {
              "type": "string",
              "description": "name of the user"
            },
            "group_name": {
              "type": "string",
              "description": "name of the group"
            },
            "service_principal_name": {
              "type": "string",
              "description": "Name of the service principal."
            },
            "display_name": {
              "type": "string",
              "description": "Display name of the user or service principal."
            },
            "all_permissions": {
              "description": "All permissions."
            }
          }
        }
      }
    },
    "400": {
      "error_code": "BAD_REQUEST, INVALID_PARAMETER_VALUE",
      "description": "BAD_REQUEST - Request is invalid."
    },
    "401": {
      "error_code": "UNAUTHORIZED",
      "description": "The request does not have valid authentication credentials for the operation."
    },
    "403": {
      "error_code": "PERMISSION_DENIED",
      "description": "Caller does not have permission to execute the specified operation."
    },
    "404": {
      "error_code": "FEATURE_DISABLED, RESOURCE_DOES_NOT_EXIST",
      "description": "FEATURE_DISABLED - If a given user/entity is trying to use a feature which has been disabled."
    },
    "500": {
      "error_code": "INTERNAL_SERVER_ERROR",
      "description": "Internal error."
    }
  }
}